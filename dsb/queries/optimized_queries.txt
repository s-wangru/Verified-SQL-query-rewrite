User Query: 
select 
   sum(ws_ext_discount_amt)  as "Excess Discount Amount"
from
    web_sales
   ,item
   ,date_dim
where
(i_manufact_id BETWEEN 394 and 593
or i_category IN ('Books', 'Home', 'Sports'))
and i_item_sk = ws_item_sk
and d_date between '2002-02-11' and
        cast('2002-02-11' as date) + interval '90 day'
and d_date_sk = ws_sold_date_sk
and ws_wholesale_cost BETWEEN 68 AND 88
and ws_ext_discount_amt
     > (
         SELECT
            1.3 * avg(ws_ext_discount_amt)
         FROM
            web_sales
           ,date_dim
         WHERE
              ws_item_sk = i_item_sk
          and d_date between '2002-02-11' and
                             cast('2002-02-11' as date) + interval '90 day'
          and d_date_sk = ws_sold_date_sk
          and ws_wholesale_cost BETWEEN 68 AND 88
          and ws_sales_price / ws_list_price BETWEEN 85 * 0.01 AND 100 * 0.01
  )
order by sum(ws_ext_discount_amt)
limit 100;



Optimized Query: SELECT SUM(ws_ext_discount_amt) AS "Excess Discount Amount" FROM web_sales INNER JOIN item ON i_item_sk = ws_item_sk INNER JOIN date_dim ON d_date_sk = ws_sold_date_sk WHERE (i_manufact_id BETWEEN 394 AND 593 OR i_category IN ('Books', 'Home', 'Sports')) AND d_date BETWEEN '2002-02-11' AND date '2002-02-11'+ INTERVAL '90 day' AND ws_wholesale_cost BETWEEN 68 AND 88 AND ws_ext_discount_amt > (SELECT 1.3 * AVG(ws_ext_discount_amt) FROM web_sales INNER JOIN date_dim ON d_date_sk = ws_sold_date_sk WHERE ws_item_sk = i_item_sk AND d_date BETWEEN '2002-02-11' AND date '2002-02-11' + INTERVAL '90 day' AND ws_wholesale_cost BETWEEN 68 AND 88 AND ws_sales_price / ws_list_price BETWEEN 85 * 0.01 AND 100 * 0.01) ORDER BY SUM(ws_ext_discount_amt) LIMIT 100;

User Query: 
select count(*)
from ((select distinct c_last_name, c_first_name, d_date
       from store_sales, date_dim, customer
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_customer_sk = customer.c_customer_sk
         and d_month_seq between 1222 and 1222+11
         and ss_list_price between 269 and 298
         and c_birth_year BETWEEN 1958 AND 1964
         and ss_wholesale_cost BETWEEN 90 AND 100
         )
       except
      (select distinct c_last_name, c_first_name, d_date
       from catalog_sales, date_dim, customer
       where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
         and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
         and d_month_seq between 1222 and 1222+11
         and cs_list_price between 269 and 298
         and c_birth_year BETWEEN 1958 AND 1964
         and cs_wholesale_cost BETWEEN 90 AND 100
         )
       except
      (select distinct c_last_name, c_first_name, d_date
       from web_sales, date_dim, customer
       where web_sales.ws_sold_date_sk = date_dim.d_date_sk
         and web_sales.ws_bill_customer_sk = customer.c_customer_sk
         and d_month_seq between 1222 and 1222+11
         and ws_list_price between 269 and 298
         and c_birth_year BETWEEN 1958 AND 1964
         and ws_wholesale_cost BETWEEN 90 AND 100
         )
) cool_cust
;



Optimized Query: SELECT COUNT(*) FROM (SELECT c_last_name, c_first_name, d_date FROM store_sales JOIN date_dim ON store_sales.ss_sold_date_sk = date_dim.d_date_sk JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk WHERE d_month_seq BETWEEN 1222 AND 1233 AND ss_list_price BETWEEN 269 AND 298 AND c_birth_year BETWEEN 1958 AND 1964 AND ss_wholesale_cost BETWEEN 90 AND 100 MINUS SELECT c_last_name, c_first_name, d_date FROM catalog_sales JOIN date_dim ON catalog_sales.cs_sold_date_sk = date_dim.d_date_sk JOIN customer ON catalog_sales.cs_bill_customer_sk = customer.c_customer_sk WHERE d_month_seq BETWEEN 1222 AND 1233 AND cs_list_price BETWEEN 269 AND 298 AND c_birth_year BETWEEN 1958 AND 1964 AND cs_wholesale_cost BETWEEN 90 AND 100 MINUS SELECT c_last_name, c_first_name, d_date FROM web_sales JOIN date_dim ON web_sales.ws_sold_date_sk = date_dim.d_date_sk JOIN customer ON web_sales.ws_bill_customer_sk = customer.c_customer_sk WHERE d_month_seq BETWEEN 1222 AND 1233 AND ws_list_price BETWEEN 269 AND 298 AND c_birth_year BETWEEN 1958 AND 1964 AND ws_wholesale_cost BETWEEN 90 AND 100) AS cool_cust;

User Query: 
select min(w_warehouse_name)
  ,min(sm_type)
  ,min(cc_name)
  ,min(cs_order_number)
  ,min(cs_item_sk)
from
   catalog_sales
  ,warehouse
  ,ship_mode
  ,call_center
  ,date_dim
where
    d_month_seq between 1193 and 1193 + 23
and cs_ship_date_sk   = d_date_sk
and cs_warehouse_sk   = w_warehouse_sk
and cs_ship_mode_sk   = sm_ship_mode_sk
and cs_call_center_sk = cc_call_center_sk
and cs_list_price between 77 and 106
and sm_type = 'TWO DAY'
and cc_class = 'small'
and w_gmt_offset = -5
;



Optimized Query: SELECT MIN(w_warehouse_name), MIN(sm_type), MIN(cc_name), MIN(cs_order_number), MIN(cs_item_sk) FROM catalog_sales INNER JOIN warehouse ON cs_warehouse_sk = w_warehouse_sk INNER JOIN ship_mode ON cs_ship_mode_sk = sm_ship_mode_sk INNER JOIN call_center ON cs_call_center_sk = cc_call_center_sk INNER JOIN date_dim ON cs_ship_date_sk = d_date_sk WHERE d_month_seq BETWEEN 1193 AND 1216 AND cs_list_price BETWEEN 77 AND 106 AND sm_type = 'TWO DAY' AND cc_class = 'small' AND w_gmt_offset = -5;

User Query: 
select min(ss_item_sk),
    min(ss_ticket_number),
    min(ws_order_number),
    min(c_customer_sk),
    min(cd_demo_sk),
    min(hd_demo_sk)
from
    store_sales,
    web_sales,
    date_dim d1,
    date_dim d2,
    customer,
    inventory,
    store,
    warehouse,
    item,
    customer_demographics,
    household_demographics,
    customer_address
where
    ss_item_sk = i_item_sk
    and ws_item_sk = ss_item_sk
    and ss_sold_date_sk = d1.d_date_sk
    and ws_sold_date_sk = d2.d_date_sk
    and d2.d_date between d1.d_date and (d1.d_date + interval '30 day')
    and ss_customer_sk = c_customer_sk
    and ws_bill_customer_sk = c_customer_sk
    and ws_warehouse_sk = inv_warehouse_sk
    and ws_warehouse_sk = w_warehouse_sk
    and inv_item_sk = ss_item_sk
    and inv_date_sk = ss_sold_date_sk
    and inv_quantity_on_hand >= ss_quantity
    and s_state = w_state
    AND i_category IN ('Books', 'Home', 'Sports')
    and i_manager_id IN (3, 15, 17, 26, 43, 44, 55, 70, 82, 95)
    and c_current_cdemo_sk = cd_demo_sk
    and c_current_hdemo_sk = hd_demo_sk
    and c_current_addr_sk = ca_address_sk
    and ca_state in ('IN', 'LA', 'NE', 'NM', 'OH')
    and d1.d_year = 2001
    and ws_wholesale_cost BETWEEN 80 AND 100
    ;



Optimized Query: SELECT MIN(ss_item_sk), MIN(ss_ticket_number), MIN(ws_order_number), MIN(c_customer_sk), MIN(cd_demo_sk), MIN(hd_demo_sk) FROM store_sales inner join web_sales on ss_item_sk = ws_item_sk inner join date_dim d1 on ss_sold_date_sk = d1.d_date_sk inner join date_dim d2 on ws_sold_date_sk = d2.d_date_sk inner join customer on ss_customer_sk = c_customer_sk inner join inventory on ws_warehouse_sk = inv_warehouse_sk and inv_item_sk = ss_item_sk and inv_date_sk = ss_sold_date_sk inner join store on ss_store_sk = s_store_sk inner join warehouse on ws_warehouse_sk = w_warehouse_sk inner join item on ss_item_sk = i_item_sk inner join customer_demographics on c_current_cdemo_sk = cd_demo_sk inner join household_demographics on c_current_hdemo_sk = hd_demo_sk inner join customer_address on c_current_addr_sk = ca_address_sk WHERE d2.d_date BETWEEN d1.d_date AND DATE_ADD(d1.d_date, INTERVAL 30 DAY) AND inv_quantity_on_hand >= ss_quantity AND s_state = w_state AND i_category IN ('Books', 'Home', 'Sports') AND i_manager_id IN (3, 15, 17, 26, 43, 44, 55, 70, 82, 95) AND ca_state IN ('IN', 'LA', 'NE', 'NM', 'OH') AND d1.d_year = 2001 AND ws_wholesale_cost BETWEEN 80 AND 100;

User Query: 
select min(c_customer_sk), min(ss_item_sk), min(sr_ticket_number), min(ws_order_number)
FROM
store_sales,
store_returns,
web_sales,
date_dim d1,
date_dim d2,
item,
customer,
customer_address,
household_demographics
WHERE
ss_ticket_number = sr_ticket_number
AND ss_customer_sk = ws_bill_customer_sk
AND ss_customer_sk = c_customer_sk
AND c_current_addr_sk = ca_address_sk
AND c_current_hdemo_sk = hd_demo_sk
AND ss_item_sk = sr_item_sk
AND sr_item_sk = ws_item_sk
AND i_item_sk = ss_item_sk
AND i_category IN ('Books', 'Shoes', 'Sports')
AND sr_returned_date_sk = d1.d_date_sk
AND ws_sold_date_sk = d2.d_date_sk
AND d2.d_date between d1.d_date AND (d1.d_date + interval '90 day')
AND ca_state in ('IN', 'MT', 'NM', 'OH', 'OR')
AND d1.d_year = 1999
AND hd_income_band_sk BETWEEN 14 AND 20
AND hd_buy_potential = '5001-10000'
AND ss_sales_price / ss_list_price BETWEEN 80 * 0.01 AND 100 * 0.01
;



Optimized Query: SELECT MIN(c_customer_sk), MIN(ss_item_sk), MIN(sr_ticket_number), MIN(ws_order_number)
FROM store_sales
JOIN store_returns ON ss_ticket_number = sr_ticket_number AND ss_item_sk = sr_item_sk
JOIN web_sales ON ss_customer_sk = ws_bill_customer_sk AND sr_item_sk = ws_item_sk
JOIN item ON i_item_sk = ss_item_sk AND i_category IN ('Books', 'Shoes', 'Sports')
JOIN customer ON ss_customer_sk = c_customer_sk
JOIN customer_address ON c_current_addr_sk = ca_address_sk AND ca_state in ('IN', 'MT', 'NM', 'OH', 'OR')
JOIN household_demographics ON c_current_hdemo_sk = hd_demo_sk AND hd_income_band_sk BETWEEN 14 AND 20 AND hd_buy_potential = '5001-10000'
JOIN date_dim d1 ON sr_returned_date_sk = d1.d_date_sk AND d1.d_year = 1999
JOIN date_dim d2 ON ws_sold_date_sk = d2.d_date_sk AND d2.d_date between d1.d_date AND (d1.d_date + interval '90 day')
WHERE ss_sales_price / ss_list_price BETWEEN 0.80 AND 1.00;

User Query: 
select min(item1.i_item_sk),
    min(item2.i_item_sk),
    min(s1.ss_ticket_number),
    min(s1.ss_item_sk)
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry', 'Music')
and item2.i_manager_id between 77 and 96
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 236 and 250
and s2.ss_list_price between 236 and 250
;



Optimized Query: SELECT MIN(item1.i_item_sk), MIN(item2.i_item_sk), MIN(s1.ss_ticket_number), MIN(s1.ss_item_sk) 
FROM store_sales s1 
JOIN store_sales s2 ON s1.ss_ticket_number = s2.ss_ticket_number 
JOIN item item1 ON s1.ss_item_sk = item1.i_item_sk 
JOIN item item2 ON s2.ss_item_sk = item2.i_item_sk AND item1.i_item_sk < item2.i_item_sk 
JOIN date_dim ON d_date_sk = s1.ss_sold_date_sk 
JOIN customer ON s1.ss_customer_sk = c_customer_sk 
JOIN customer_address ON c_current_addr_sk = ca_address_sk 
JOIN customer_demographics ON c_current_cdemo_sk = cd_demo_sk 
WHERE d_year BETWEEN 1998 AND 1999 
AND item1.i_category IN ('Jewelry', 'Music') AND item2.i_manager_id BETWEEN 77 AND 96 
AND cd_marital_status = 'W' AND cd_education_status = 'Primary' 
AND s1.ss_list_price BETWEEN 236 AND 250 AND s2.ss_list_price BETWEEN 236 AND 250;

User Query: 
select 
    cd_gender,
    cd_marital_status,
    cd_education_status,
    hd_vehicle_count,
    count(*) as cnt
from
    store_sales,
    web_sales,
    date_dim d1,
    date_dim d2,
    customer,
    inventory,
    store,
    warehouse,
    item,
    customer_demographics,
    household_demographics,
    customer_address
    where
      ss_item_sk = i_item_sk
      and ws_item_sk = ss_item_sk
      and ss_sold_date_sk = d1.d_date_sk
      and ws_sold_date_sk = d2.d_date_sk
			and d2.d_date between d1.d_date and (d1.d_date + interval '30 day')
      and ss_customer_sk = c_customer_sk
      and ws_bill_customer_sk = c_customer_sk
      and ws_warehouse_sk = inv_warehouse_sk
      and ws_warehouse_sk = w_warehouse_sk
      and inv_item_sk = ss_item_sk
      and inv_date_sk = ss_sold_date_sk
      and inv_quantity_on_hand >= ss_quantity
      and s_state = w_state
      AND i_category IN ('Books', 'Home', 'Sports')
      and i_manager_id IN (3, 15, 17, 26, 43, 44, 55, 70, 82, 95)
      and c_current_cdemo_sk = cd_demo_sk
      and c_current_hdemo_sk = hd_demo_sk
      and c_current_addr_sk = ca_address_sk
      and ca_state in ('IN', 'LA', 'NE', 'NM', 'OH')
      and d1.d_year = 2001
      and ws_wholesale_cost BETWEEN 80 AND 100
    group by cd_gender, cd_marital_status, cd_education_status, hd_vehicle_count
    order by cnt
    ;



Optimized Query: SELECT cd_gender, cd_marital_status, cd_education_status, hd_vehicle_count, COUNT(*) AS cnt FROM store_sales ss JOIN web_sales ws ON ss.ss_item_sk = ws.ws_item_sk JOIN date_dim d1 ON ss.ss_sold_date_sk = d1.d_date_sk JOIN date_dim d2 ON ws.ws_sold_date_sk = d2.d_date_sk JOIN customer c ON ss.ss_customer_sk = c.c_customer_sk JOIN inventory inv ON ws.ws_warehouse_sk = inv.inv_warehouse_sk AND ws.ws_item_sk = inv.inv_item_sk JOIN warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk JOIN item i ON ss.ss_item_sk = i.i_item_sk JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk WHERE ws_bill_customer_sk = c.c_customer_sk AND inv.inv_date_sk = ss.ss_sold_date_sk AND inv.inv_quantity_on_hand >= ss.ss_quantity AND s_state = w_state AND i.i_category IN ('Books', 'Home', 'Sports') AND i.i_manager_id IN (3, 15, 17, 26, 43, 44, 55, 70, 82, 95) AND ca.ca_state in ('IN', 'LA', 'NE', 'NM', 'OH') AND d1.d_year = 2001 AND ws.ws_wholesale_cost BETWEEN 80 AND 100 AND d2.d_date BETWEEN d1.d_date AND (d1.d_date + interval '30 day') GROUP BY cd_gender, cd_marital_status, cd_education_status, hd_vehicle_count ORDER BY cnt;

User Query: 
select 
   count(distinct ws_order_number) as "order count"
  ,sum(ws_ext_ship_cost) as "total shipping cost"
  ,sum(ws_net_profit) as "total net profit"
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '2000-10-01' and
           cast('2000-10-01' as date) + interval '60 day'
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state in ('IA','IN','MT'
            ,'NE' ,'OK' ,'TX')
and ws1.ws_web_site_sk = web_site_sk
and web_gmt_offset >= -7
and ws1.ws_list_price between 141 and 170
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number
               and wr1.wr_reason_sk in (7, 10, 12, 29, 45)
               )
order by count(distinct ws_order_number)
limit 100;



Optimized Query: SELECT count(DISTINCT ws_order_number) AS "order count", sum(ws_ext_ship_cost) AS "total shipping cost", sum(ws_net_profit) AS "total net profit" FROM web_sales ws1 JOIN date_dim ON ws1.ws_ship_date_sk = d_date_sk JOIN customer_address ON ws1.ws_ship_addr_sk = ca_address_sk JOIN web_site ON ws1.ws_web_site_sk = web_site_sk WHERE d_date BETWEEN '2000-10-01' AND '2000-12-01' AND ca_state in ('IA', 'IN', 'MT', 'NE', 'OK', 'TX') AND web_gmt_offset >= -7 AND ws1.ws_list_price BETWEEN 141 AND 170 AND EXISTS (SELECT 1 FROM web_sales ws2 WHERE ws1.ws_order_number = ws2.ws_order_number AND ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk) AND NOT EXISTS(SELECT 1 FROM web_returns wr1 WHERE ws1.ws_order_number = wr1.wr_order_number AND wr1.wr_reason_sk in (7, 10, 12, 29, 45)) ORDER BY 1 LIMIT 100;

User Query: 
select  c_customer_sk, c_first_name, c_last_name, count(*) as cnt
FROM
store_sales,
store_returns,
web_sales,
date_dim d1,
date_dim d2,
item,
customer,
customer_address,
household_demographics
WHERE
ss_ticket_number = sr_ticket_number
AND ss_customer_sk = ws_bill_customer_sk
AND ss_customer_sk = c_customer_sk
AND c_current_addr_sk = ca_address_sk
AND c_current_hdemo_sk = hd_demo_sk
AND ss_item_sk = sr_item_sk
AND sr_item_sk = ws_item_sk
AND i_item_sk = ss_item_sk
AND i_category IN ('Books', 'Shoes', 'Sports')
AND sr_returned_date_sk = d1.d_date_sk
AND ws_sold_date_sk = d2.d_date_sk
AND d2.d_date between d1.d_date AND (d1.d_date + interval '90 day')
AND ca_state in ('IN', 'MT', 'NM', 'OH', 'OR')
AND d1.d_year = 1999
AND hd_income_band_sk BETWEEN 14 AND 20
AND hd_buy_potential = '5001-10000'
AND ss_sales_price / ss_list_price BETWEEN 80 * 0.01 AND 100 * 0.01
GROUP BY c_customer_sk, c_first_name, c_last_name
ORDER BY cnt
;



Optimized Query: SELECT c_customer_sk, c_first_name, c_last_name, COUNT(*) AS cnt FROM store_sales JOIN store_returns ON ss_ticket_number = sr_ticket_number JOIN web_sales ON ss_customer_sk = ws_bill_customer_sk JOIN date_dim d1 ON sr_returned_date_sk = d1.d_date_sk JOIN date_dim d2 ON ws_sold_date_sk = d2.d_date_sk JOIN item ON ss_item_sk = sr_item_sk AND sr_item_sk = ws_item_sk AND i_item_sk = ss_item_sk JOIN customer ON ss_customer_sk = c_customer_sk JOIN customer_address ON c_current_addr_sk = ca_address_sk JOIN household_demographics ON c_current_hdemo_sk = hd_demo_sk WHERE c_first_name IS NOT NULL AND c_last_name IS NOT NULL AND c_current_addr_sk IS NOT NULL AND c_current_hdemo_sk IS NOT NULL AND i_category IN ('Books', 'Shoes', 'Sports') AND d2.d_date BETWEEN d1.d_date AND (d1.d_date + interval '90 day') AND ca_state IN ('IN', 'MT', 'NM', 'OH', 'OR') AND d1.d_year = 1999 AND hd_income_band_sk BETWEEN 14 AND 20 AND hd_buy_potential = '5001-10000' AND ss_sales_price / ss_list_price BETWEEN 0.8 AND 1 GROUP BY c_customer_sk, c_first_name, c_last_name ORDER BY cnt;

User Query: 
select  item1.i_item_sk, item2.i_item_sk, count(*) as cnt
FROM item AS item1,
item AS item2,
store_sales AS s1,
store_sales AS s2,
date_dim,
customer,
customer_address,
customer_demographics
WHERE
item1.i_item_sk < item2.i_item_sk
AND s1.ss_ticket_number = s2.ss_ticket_number
AND s1.ss_item_sk = item1.i_item_sk and s2.ss_item_sk = item2.i_item_sk
AND s1.ss_customer_sk = c_customer_sk
and c_current_addr_sk = ca_address_sk
and c_current_cdemo_sk = cd_demo_sk
AND d_year between 1998 and 1998 + 1
and d_date_sk = s1.ss_sold_date_sk
and item1.i_category in ('Jewelry', 'Music')
and item2.i_manager_id between 77 and 96
and cd_marital_status = 'W'
and cd_education_status = 'Primary'
and s1.ss_list_price between 236 and 250
and s2.ss_list_price between 236 and 250
GROUP BY item1.i_item_sk, item2.i_item_sk
ORDER BY cnt
;



Optimized Query: SELECT item1.i_item_sk, item2.i_item_sk, COUNT(*) AS cnt
FROM store_sales AS s1
JOIN store_sales AS s2 ON s1.ss_ticket_number = s2.ss_ticket_number
JOIN item AS item1 ON s1.ss_item_sk = item1.i_item_sk 
JOIN item AS item2 ON s2.ss_item_sk = item2.i_item_sk
JOIN customer ON s1.ss_customer_sk = c_customer_sk
JOIN customer_address ON c_current_addr_sk = ca_address_sk
JOIN customer_demographics ON c_current_cdemo_sk = cd_demo_sk
JOIN date_dim ON d_date_sk = s1.ss_sold_date_sk
WHERE item1.i_item_sk < item2.i_item_sk AND d_year BETWEEN 1998 AND 1999
AND item1.i_category IN ('Jewelry', 'Music') AND item2.i_manager_id BETWEEN 77 AND 96
AND cd_marital_status = 'W' AND cd_education_status = 'Primary' 
AND s1.ss_list_price BETWEEN 236 AND 250 AND s2.ss_list_price BETWEEN 236 AND 250
GROUP BY item1.i_item_sk, item2.i_item_sk
ORDER BY cnt;

